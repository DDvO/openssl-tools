#! /bin/bash

function usage {
    echo "Usage: pick-to-branch [<commit_id>] <branch>
    Cherry-pick a commit on the given target branch.

    If <commit_id>, intuit commit id from master.
    The <branch> arg must match a release branch or start with 'm' for master.
    A release branch may be given simply as 102, 110, 111, 30, 31."
}

case $# in
2)
    id=$1
    b=$2
    ;;
1)
    id=`git branch -v | awk '$2=="master" { print $3; }'`
    b=$1
    ;;
*)
    usage
    exit 1
    ;;
esac


case $b in
*1*0*2*)
    branch=OpenSSL_1_0_2-stable
    ;;
*1*1*0*)
    branch=OpenSSL_1_1_0-stable
    ;;
*1*1*1*)
    branch=OpenSSL_1_1_1-stable
    ;;
*3*0*)
    branch=openssl-3.0
    ;;
*3*1*)
    branch=openssl-3.1
    ;;
m*)
    branch=master
    ;;
*)
    echo Unknown branch
    exit 1
    ;;
esac

echo "commit id is $id"
echo "target branch is $branch"
echo "Are these correct?"

while true
do
    echo -n "Enter 'y'/'yes' to continue or 'n'/'no' to abort: "
    read x
    x="`echo $x | tr A-Z a-z`"
    if [ "$x" = "y" -o "$x" = "yes" -o "$x" = "n" -o "$x" = "no" ]
    then
        break
    fi
done

if [ "$x" = "n" -o "$x" = "no" ]
then
    exit 1
fi

git checkout --quiet master || exit 1
git checkout $branch || exit 1
git cherry-pick -e -x $id

while true
do
    echo -n "Enter 'y'/'yes' to push or 'n'/'no' to abort: "
    read x
    x="`echo $x | tr A-Z a-z`"
    if [ "$x" = "y" -o "$x" = "yes" -o "$x" = "n" -o "$x" = "no" ]
    then
        break
    fi
done

if [ "$x" = "y" -o "$x" = "yes" ]
then
    git push
fi

git checkout master
